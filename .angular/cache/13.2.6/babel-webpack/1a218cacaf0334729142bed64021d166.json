{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    constructor(http) {\n      this.http = http;\n      this.username = '';\n      this.password = '';\n      this.urlLocal = 'http://5318-94-189-237-73.ngrok.io';\n    }\n\n    getStatus() {\n      let url = this.urlLocal + \"/getStatus\";\n      return this.http.get(url, {\n        headers: {\n          authorization: this.createBasicAuthToken(this.username, this.password)\n        }\n      });\n    }\n\n    login(username, password) {\n      return this.http.get(this.urlLocal + \"/login\", {\n        headers: {\n          authorization: this.createBasicAuthToken(username, password)\n        }\n      }).pipe(map(res => {\n        sessionStorage.setItem('loggedIn', username);\n        this.username = username;\n        this.password = password;\n        this.registerSuccessfulLogin(username, password);\n      }));\n    }\n\n    callShutdown() {\n      let url = this.urlLocal + \"/shutdown\";\n      console.log(\"called\");\n      return this.http.get(url, {\n        headers: {\n          authorization: this.createBasicAuthToken(this.username, this.password)\n        }\n      });\n    }\n\n    callMonkey() {\n      let url = this.urlLocal + \"/monkey\";\n      console.log(\"called\");\n      return this.http.get(url, {\n        headers: {\n          authorization: this.createBasicAuthToken(this.username, this.password)\n        }\n      });\n    }\n\n    createBasicAuthToken(username, password) {\n      return 'Basic ' + window.btoa(username + \":\" + password);\n    }\n\n    registerSuccessfulLogin(username, password) {\n      console.log(\"username je \" + username);\n    }\n\n    isUserLoggedIn() {\n      let user = sessionStorage.getItem('loggedIn');\n      console.log(!(user === null));\n      return !(user === null);\n    }\n\n  }\n\n  ApiService.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return ApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}